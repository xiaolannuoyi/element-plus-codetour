{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "radio",
  "steps": [
    {
      "file": "element-plus/packages/components/radio/src/radio.vue",
      "description": "# 结构\n`label`放在最外层的作用是`扩大鼠标点击范围`，无论是点击在文字还是input上都能够触发响\n```html\n<label class=\"el-radio\">\n  <!-- 单选框 -->\n  <span class=\"el-radio__input\"></span>\n  <!-- 文字部分 -->\n  <span class=\"el-radio__label\"></span>\n</label>\n```\n",
      "line": 1
    },
    {
      "file": "element-plus/packages/components/radio/src/radio.vue",
      "description": "# 结构\n\n```html\n <!-- 模拟圆形按钮 -->\n    <span class=\"el-radio__input\">\n      <!-- 圆形样式 -->\n      <span class=\"el-radio__inner\"></span>\n      <!-- 真正的按钮 -->\n      <!-- el-radio__original ⚠️注意这个样式 -->\n      <input>\n    </span>\n```",
      "line": 39,
      "selection": {
        "start": {
          "line": 17,
          "character": 5
        },
        "end": {
          "line": 39,
          "character": 12
        }
      }
    },
    {
      "file": "element-plus/packages/components/radio/src/radio.vue",
      "description": "# 结构\n```html\n<!-- 文字部分 -->\n<!-- keydown.stop 阻止事件继续冒泡 -->\n```",
      "line": 44,
      "selection": {
        "start": {
          "line": 40,
          "character": 5
        },
        "end": {
          "line": 44,
          "character": 12
        }
      }
    },
    {
      "file": "element-plus/packages/theme-chalk/src/radio.scss",
      "description": "# el-radio__original\n\n真正的input透明度为0，且是绝对定位脱离文档流，因此我们看不到，但是是有大小的。\n\n注意不是`display:none`或者`visibility:hidden`,如果是none或者hidden的话则无法触发鼠标点击了，**只有`opacity:0`才能达到目的,这是个需要注意的地方**",
      "line": 176
    },
    {
      "file": "element-plus/packages/components/radio/src/radio.vue",
      "description": "# role\n\n`role`role的作用是描述一个非标准的tag的实际作用。比如用div做button，那么设置div 的 role=\"button\"，辅助工具就可以认出这实际上是个button。\n\n`aria-*`的作用就是描述这个tag在可视化的情境中的具体信息",
      "line": 13,
      "selection": {
        "start": {
          "line": 11,
          "character": 5
        },
        "end": {
          "line": 13,
          "character": 32
        }
      }
    },
    {
      "file": "element-plus/packages/components/radio/src/radio.vue",
      "description": "# tabindex\n\ntabindex规定了按下tab键该元素获取焦点的顺序,同样是个计算属性\n\n*这个功能是为了用tab切换不同选项时，按空格可以快速选择目标项* (先通过tab 切换聚焦，在通过space选择当前聚焦的项目)\n\n- tabindex=负值 (通常是tabindex=“-1”)，表示元素是可聚焦的，但是不能通过键盘导航来访问到该元素，用JS做页面小组件内部键盘导航的时候非常有用。\n\n- `tabindex=\"0\"` ，表示元素是可聚焦的，并且可以通过键盘导航来聚焦到该元素，它的相对顺序是当前处于的DOM结构来决定的。\n\n- tabindex=正值，表示元素是可聚焦的，并且可以通过键盘导航来访问到该元素；它的相对顺序**按照**tabindex 的数值`递增而滞后获焦 `。如果多个元素拥有相同的 **tabindex**，它们的相对顺序按照他们在当前DOM中的先后顺序决定。",
      "line": 14,
      "selection": {
        "start": {
          "line": 14,
          "character": 5
        },
        "end": {
          "line": 14,
          "character": 25
        }
      }
    },
    {
      "file": "element-plus/packages/components/radio/src/useRadio.ts",
      "description": "# tabindex",
      "line": 55,
      "selection": {
        "start": {
          "line": 51,
          "character": 3
        },
        "end": {
          "line": 55,
          "character": 5
        }
      }
    },
    {
      "file": "element-plus/packages/components/radio/src/radio.vue",
      "description": "# keydown\n\n`@keydown.space.stop.prevent`\n\n*这个功能是为了用tab切换不同选项时，按空格可以快速选择目标项* (先通过tab 切换聚焦，在通过space选择当前聚焦的项目)",
      "line": 15,
      "selection": {
        "start": {
          "line": 15,
          "character": 5
        },
        "end": {
          "line": 15,
          "character": 69
        }
      }
    },
    {
      "file": "element-plus/packages/components/radio/src/radio.vue",
      "description": "# focus\n作用：控制focus样式 click时，不显示focus样式\n\ntab时，显示focus样式：label上的`tabindex=0`,tab时，可聚焦。而input的`tabindex=-1`，tab时，不可聚焦。若不加`tabindex=-1`需要tab两次才会聚焦下一个。\n\nclick时，不显示focus样式：click时，触发input的focus事件。`@focus='focus = true'`、`'is-focus':focus `\n`&:focus:not(.is-focus):not(:active):not(.is-disabled) `设置样式",
      "line": 7,
      "selection": {
        "start": {
          "line": 14,
          "character": 16
        },
        "end": {
          "line": 14,
          "character": 24
        }
      }
    },
    {
      "file": "element-plus/packages/theme-chalk/src/radio.scss",
      "description": "# focus样式",
      "line": 183,
      "selection": {
        "start": {
          "line": 178,
          "character": 3
        },
        "end": {
          "line": 183,
          "character": 4
        }
      }
    },
    {
      "file": "element-plus/packages/components/radio/src/radio.vue",
      "description": "# model\n\ndom 对象上的 checked 属性\n",
      "line": 99,
      "selection": {
        "start": {
          "line": 99,
          "character": 9
        },
        "end": {
          "line": 99,
          "character": 66
        }
      }
    },
    {
      "file": "element-plus/packages/components/radio/src/radio.vue",
      "description": "# radio change\n我认为此处的`nextTick`有无均可。因为这里不涉及到页面的更新。",
      "line": 121,
      "selection": {
        "start": {
          "line": 117,
          "character": 5
        },
        "end": {
          "line": 121,
          "character": 6
        }
      }
    },
    {
      "file": "element-plus/packages/components/radio/src/radio-group.vue",
      "description": "# radio-group change\n这里的`nextTick`是必须的。因为`UPDATE_MODEL_EVENT`会更新页面的值，涉及到页面的更新。\n此时是先更新页面，再出发change事件。\n\n如果没有`nextTick`，就会先触发change事件。在去更新页面。",
      "line": 77,
      "selection": {
        "start": {
          "line": 72,
          "character": 5
        },
        "end": {
          "line": 77,
          "character": 6
        }
      }
    },
    {
      "file": "element-plus/packages/components/radio/src/radio-group.vue",
      "description": "# ⬅️⬆️ 选中前一个\n\ne.stopPropagation()//阻止冒泡\n\ne.preventDefault()//阻止默认行为\n\n如果当前选中的是第一个，则下一个选中的是最后一个，否则是前一个",
      "line": 112,
      "selection": {
        "start": {
          "line": 108,
          "character": 9
        },
        "end": {
          "line": 112,
          "character": 16
        }
      }
    },
    {
      "file": "element-plus/packages/components/radio/src/radio-group.vue",
      "description": "# ➡️⬇️ 选中后一个\n\n如果当前选中的是最后一个，则下一个选中的是第一个，否则是后一个",
      "line": 118,
      "selection": {
        "start": {
          "line": 114,
          "character": 8
        },
        "end": {
          "line": 118,
          "character": 16
        }
      }
    }
  ]
}